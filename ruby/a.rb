# characters = 128.times.collect(&:chr).join.scan(/\p{Print}/) # => [" ", "!", "\"", "#", "$", "%", "&", "'", "(", ")", "*", "+", ",", "-", ".", "/", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", ":", ";", "<", "=", ">", "?", "@", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "[", "\\", "]", "^", "_", "`", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "{", "|", "}", "~"]
# char_indices = characters.collect.with_index.to_a.to_h       # => {" "=>0, "!"=>1, "\""=>2, "#"=>3, "$"=>4, "%"=>5, "&"=>6, "'"=>7, "("=>8, ")"=>9, "*"=>10, "+"=>11, ","=>12, "-"=>13, "."=>14, "/"=>15, "0"=>16, "1"=>17, "2"=>18, "3"=>19, "4"=>20, "5"=>21, "6"=>22, "7"=>23, "8"=>24, "9"=>25, ":"=>26, ";"=>27, "<"=>28, "="=>29, ">"=>30, "?"=>31, "@"=>32, "A"=>33, "B"=>34, "C"=>35, "D"=>36, "E"=>37, "F"=>38, "G"=>39, "H"=>40, "I"=>41, "J"=>42, "K"=>43, "L"=>44, "M"=>45, "N"=>46, "O"=>47, "P"=>48, "Q"=>49, "R"=>50, "S"=>51, "T"=>52, "U"=>53, "V"=>54, "W"=>55, "X"=>56, "Y"=>57, "Z"=>58, "["=>59, "\\"=>60, "]"=>61, "^"=>62, "_"=>63, "`"=>64, "a"=>65, "b"=>66, "c"=>67, "d"=>68, "e"=>69, "f"=>70, "g"=>71, "h"=>72, "i"=>73, "j"=>74, "k"=>75, "l"=>76, "m"=>77, "n"=>78, "o"=>79, "p"=>80, "q"=>81, "r"=>82, "s"=>83, "t"=>84, "u"=>85, "v"=>86, "w"=>87, "x"=>88, "y"=>89, "z"=>90, "{"=>91, "|"=>92, "}"=>93, "~"=>94}
# indices_char = char_indices.invert                           # => {`", 65=>"a", 66=>"b", 67=>"c", 68=>"d", 69=>"e", 70=>"f", 71=>"g", 72=>"h", 73=>"i", 74=>"j", 75=>"k", 76=>"l", 77=>"m", 78=>"n", 79=>"o", 80=>"p", 81=>"q", 82=>"r", 83=>"s", 84=>"t", 85=>"u", 86=>"v", 87=>"w", 88=>"x", 89=>"y", 90=>"z", 91=>"{", 92=>"|", 93=>"}", 94=>"~"}

require "numo/narray"
include Numo

# a = DFloat[50, 60, 70, 80]

p DFloat.zeros(3, 3)                # => Numo::DFloat#shape=[3,3]

("a".."z").each.to_a            # => ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"]
# >> Numo::DFloat#shape=[3,3]
# >> [[0, 0, 0], 
# >>  [0, 0, 0], 
# >>  [0, 0, 0]]
